import{mapGetters as a}from"../vuex.js";const r={computed:{...a("preview",["isIframe"])},mounted(){this.$store.dispatch("queryParams/load"),this.$store.dispatch("pixels/load"),this.$store.dispatch("preview/load"),window.addEventListener("load",()=>{const e=new URLSearchParams(window.location.search),i=e.get("section");e.get("preview")&&i&&Promise.all(Array.from(document.images).filter(t=>!t.complete).map(t=>new Promise(s=>{t.onload=t.onerror=s}))).then(()=>{setTimeout(()=>{this.$store.dispatch("preview/focusOnSection",i)},500)})}),this.isIframe&&window.addEventListener("message",e=>{if(e.data==="clean-sections"){this.$store.dispatch("preview/setActiveSection",null);return}if(typeof e.data=="string"){this.$store.dispatch("preview/setActiveSection",e.data),this.$store.dispatch("preview/focusOnSection",e.data);return}this.$store.dispatch("preview/updateParams",e.data)})}};export{r as default};
